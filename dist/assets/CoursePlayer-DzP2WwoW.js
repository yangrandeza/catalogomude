import{c as R,p as k,a as j,b,r as l,j as t,d as A,L as _}from"./index-CQAG8VK0.js";import{g as N}from"./opfsService-CMiQAXDZ.js";import{A as $}from"./arrow-left-DubhSE8H.js";/**
 * @license lucide-react v0.294.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const D=R("Maximize2",[["polyline",{points:"15 3 21 3 21 9",key:"mznyad"}],["polyline",{points:"9 21 3 21 3 15",key:"1avn1i"}],["line",{x1:"21",x2:"14",y1:"3",y2:"10",key:"ota7mn"}],["line",{x1:"3",x2:"10",y1:"21",y2:"14",key:"1atl0r"}]]);/**
 * @license lucide-react v0.294.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const F=R("Minimize2",[["polyline",{points:"4 14 10 14 10 20",key:"11kfnr"}],["polyline",{points:"20 10 14 10 14 4",key:"rlmsce"}],["line",{x1:"14",x2:"21",y1:"10",y2:"3",key:"o5lafz"}],["line",{x1:"3",x2:"10",y1:"21",y2:"14",key:"1atl0r"}]]);let E=null;const U=()=>{try{if(typeof window.pipwerks<"u"){if(window.pipwerks.SCORM.version="2004",window.pipwerks.SCORM.init())return E="2004",!0;if(window.pipwerks.SCORM.version="1.2",window.pipwerks.SCORM.init())return E="1.2",!0}return console.error("SCORM API not found"),!1}catch(e){return console.error("Error initializing SCORM API:",e),!1}},W=()=>{try{return typeof window.pipwerks<"u"?window.pipwerks.SCORM.quit():!1}catch(e){return console.error("Error terminating SCORM API:",e),!1}};let i={},f=null,m=null,o="0",a=!1;async function G(e,r){return console.log(`[LMS API] Fetching SCORM data for course ${e}, user ${r}`),{"cmi.core.student_id":r,"cmi.core.student_name":"LMS User","cmi.core.lesson_location":"","cmi.core.credit":"credit","cmi.core.lesson_status":"not attempted","cmi.core.entry":"ab-initio","cmi.core.score.raw":"","cmi.core.score.min":"0","cmi.core.score.max":"100","cmi.core.total_time":"00:00:00","cmi.core.lesson_mode":"normal","cmi.suspend_data":"","cmi.launch_data":"","cmi.comments":""}}async function V(e,r,c){return console.log(`[LMS API] Persisting SCORM data for course ${e}, user ${r}:`,c),!0}const M={LMSInitialize:e=>(console.log("[LMS API] LMSInitialize("+e+")"),!f||!m?(console.error("[LMS API] LMSInitialize failed: Course ID or User ID not set."),o="101","false"):(a&&console.warn("[LMS API] LMSInitialize called more than once."),G(f,m).then(r=>{i=r,i["cmi.core.entry"]!=="resume"&&(i["cmi.core.lesson_status"]=i["cmi.core.lesson_status"]||"incomplete"),a=!0,o="0",console.log("[LMS API] LMSInitialize successful. Data loaded:",i)}).catch(r=>{console.error("[LMS API] Error fetching SCORM data during Initialize:",r),o="101"}),!a&&Object.keys(i).length===0&&(i={"cmi.core.lesson_status":"incomplete","cmi.core.student_id":m}),a=!0,o="0","true")),LMSFinish:e=>(console.log("[LMS API] LMSFinish("+e+")"),a?(f&&m&&M.LMSCommit(""),a=!1,o="0",console.log("[LMS API] LMSFinish successful."),"true"):(o="301","false")),LMSGetValue:e=>(console.log(`[LMS API] LMSGetValue(${e})`),a?i.hasOwnProperty(e)?(o="0",console.log(`  Returning: ${i[e]}`),i[e]):(o="401",console.warn(`  Element not found: ${e}`),""):(o="301","")),LMSSetValue:(e,r)=>(console.log(`[LMS API] LMSSetValue(${e}, ${r})`),a?["cmi.core.student_id","cmi.core.student_name","cmi.core.credit","cmi.core.lesson_mode","cmi.launch_data","cmi.core.score.min","cmi.core.score.max"].includes(e)?(o="403",console.warn(` Attempt to set read-only element: ${e}`),"false"):(i[e]=r,o="0",console.log(`  Set ${e} to ${r}. Current data:`,i),"true"):(o="301","false")),LMSCommit:e=>(console.log("[LMS API] LMSCommit("+e+")"),a?!f||!m?(console.error("[LMS API] LMSCommit failed: Course ID or User ID not set."),o="101","false"):(V(f,m,i).then(r=>{r?(o="0",console.log("[LMS API] LMSCommit successful. Data persisted.")):(o="101",console.error("[LMS API] LMSCommit failed to persist data."))}).catch(r=>{console.error("[LMS API] Error during LMSCommit data persistence:",r),o="101"}),"true"):(o="301","false")),LMSGetLastError:()=>o,LMSGetErrorString:e=>({0:"No Error",101:"General Exception",201:"Invalid argument error",301:"Not initialized",401:"Not implemented error / Undefined Data Model Element",403:"Element is read only"})[e]||"Unknown Error Code",LMSGetDiagnostic:e=>"LMS Diagnostic information for error code "+e},T=(e,r)=>{typeof window<"u"?(f=e,m=r,i={},a=!1,window.API=M,console.log(`[LMS API Service] SCORM 1.2 API (window.API) initialized for course ${e}, user ${r}.`)):console.error("[LMS API Service] Cannot initialize: window is not defined.")},q=()=>{typeof window<"u"&&(a&&M.LMSFinish(""),window.API=void 0,f=null,m=null,i={},a=!1,console.log("[LMS API Service] SCORM API (window.API) has been reset and removed."))},J=()=>{const{id:e}=k(),r=j(),{toast:c}=b(),[n,z]=l.useState(null),[L,S]=l.useState(!0),[p,g]=l.useState(!1),d=l.useRef(null),C=l.useRef(null),[I,y]=l.useState(!1),[x,P]=l.useState(!1);l.useEffect(()=>{const s=e;return s?(T(s,"TEMPORARY_USER_ID"),y(!0),(async()=>{try{const u=await N(s);if(console.log("[CoursePlayer] Course data from OPFS:",u),u&&u.manifest)z(u),S(!1);else throw console.error("[CoursePlayer] Invalid course data or manifest from OPFS after loading.",u),new Error("Invalid course data or manifest from OPFS.")}catch(u){console.error("Error loading course data:",u),c({title:"Erro",description:"Não foi possível carregar os dados do curso offline.",variant:"destructive"}),S(!1)}})()):(console.warn("[CoursePlayer] Course ID is missing."),c({title:"Erro",description:"ID do curso não fornecido.",variant:"destructive"}),r("/")),()=>{q(),y(!1)}},[e,r,c]),l.useEffect(()=>{var s,w;if((s=n==null?void 0:n.manifest)!=null&&s.launchUrl&&d.current){const v=e,u=n.manifest.launchUrl,h=`/scorm-content/${v}/${u}`;console.log("[CoursePlayer] Setting iframe src to Service Worker URL:",h),d.current.src=h,d.current.onload=()=>{console.log("[CoursePlayer] iframe content loaded."),P(!0),S(!1)},d.current.onerror=()=>{console.error("Error loading SCORM content into iframe.",h),c({title:"Erro",description:"Falha ao carregar o conteúdo SCORM no iframe.",variant:"destructive"}),P(!1),S(!1)}}else n&&!((w=n==null?void 0:n.manifest)!=null&&w.launchUrl)?(console.error("[CoursePlayer] Course data loaded but launchUrl is missing from manifest.",n),c({title:"Erro",description:"Manifesto do curso inválido: Launch URL não encontrada.",variant:"destructive"}),S(!1)):!d.current&&n&&console.warn("[CoursePlayer] iframe ref is not available after course data loaded. Retrying or checking render logic.")},[n,d,e,c]),l.useEffect(()=>{var s;if(I&&x&&((s=d.current)!=null&&s.contentWindow))return console.log("[CoursePlayer] Attempting to initialize SCORM wrapper..."),U()?console.log("[CoursePlayer] pipwerks SCORM wrapper initialized successfully via initializeScormWrapper."):console.error("[CoursePlayer] pipwerks SCORM wrapper failed to initialize via initializeScormWrapper. This means it could not find window.API or window.API_1484_11."),()=>{console.log("[CoursePlayer] Attempting to terminate SCORM wrapper..."),W()}},[I,x]);const O=()=>{var s;document.fullscreenElement?(document.exitFullscreen(),g(!1)):((s=C.current)==null||s.requestFullscreen(),g(!0))};return l.useEffect(()=>{const s=()=>{g(!!document.fullscreenElement)};return document.addEventListener("fullscreenchange",s),()=>document.removeEventListener("fullscreenchange",s)},[]),t.jsxs("div",{ref:C,className:"min-h-screen bg-gradient-to-br from-indigo-800 via-purple-800 to-purple-900",children:[t.jsx("header",{className:`bg-white/10 backdrop-blur-lg border-b border-white/20 p-4 ${p?"hidden":""}`,children:t.jsxs("div",{className:"max-w-7xl mx-auto flex justify-between items-center",children:[t.jsxs("div",{className:"flex items-center gap-2",children:[t.jsx(A,{variant:"ghost",size:"icon",onClick:()=>r("/"),className:"text-white hover:bg-white/20",children:t.jsx($,{size:18})}),t.jsx("h1",{className:"text-xl font-semibold text-white",children:(n==null?void 0:n.name)||(L?"Carregando curso...":"Erro ao carregar curso")})]}),t.jsx("div",{className:"flex items-center gap-4",children:t.jsx(A,{variant:"ghost",size:"icon",onClick:O,className:"text-white hover:bg-white/20",children:p?t.jsx(F,{size:18}):t.jsx(D,{size:18})})})]})}),t.jsx("main",{className:`max-w-7xl mx-auto ${p?"p-0":"p-4"} h-full`,children:L?t.jsx("div",{className:"flex justify-center items-center h-[calc(100vh-8rem)]",children:t.jsx(_,{className:"h-8 w-8 animate-spin text-white"})}):t.jsx("div",{className:`bg-white rounded-lg shadow-xl overflow-hidden ${p?"w-screen h-screen":"h-[calc(100vh-8rem)]"}`,children:n?t.jsx("iframe",{ref:d,title:"SCORM Content",className:"w-full h-full border-0",allowFullScreen:!0}):t.jsx("div",{className:"flex justify-center items-center h-full text-red-500",children:"Falha ao carregar o conteúdo do curso."})})})]})};export{J as default};
